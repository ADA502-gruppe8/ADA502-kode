name: Test Workflow

on:
  push:
    branches:
      - yosafe_branch

jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: python:latest
    services:
      127.0.0.1:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 123456aa
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    outputs:
      test-result: ${{ steps.test-report.outputs.test-result }}
    steps:
      - name: Get Code
        uses: actions/checkout@v4

#      - name: Install Python
#        uses: actions/setup-python@v5
#        with:
#          python-version: '3.x'

      - name: python version
        run: python --version

      - name: Install Poetry
        uses: abatilo/actions-poetry@v2

      - name: Setup a local virtual environment (if no poetry.toml file)
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}

      - name: Install the project dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: poetry install

      - name: Run the automated tests
        # continue-on-error: true
        id: run-test
        run: poetry run pytest -v

      - name: test report failed
        if: failure() && steps.run-test.outcome == 'failure'
        run: echo "test-result=failed"

      - name: test report success
        if: success() && steps.run-test.outcome == 'success'
        run: echo "test-result=success"

  test-fauilur:
    needs: test
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Output test report
        run: |
          echo 'Test Failed!'


  test-success:
    needs: test
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: Output test report
        run: |
          echo 'Test Succeeded!'

  deploy:
    needs: test-success
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: Output test report
        run: |
          echo 'Deploying to production...!'
